;             Код цвета           Цвет
BLACK           equ     0       ;черный
BLUE            equ     1       ;голубой
GREEN           equ     2       ;зеленый
CYAN            equ     3       ;синий
RED             equ     4       ;красный
MAGENTA         equ     5       ;малиновый
BROWN           equ     6       ;коричневый
LIGHTGRAY       equ     7       ;белый
DARKGRAY        equ     8       ;серый
LIGHTBLUE       equ     9       ;светло-голубой
LIGHTGREEN      equ     10      ;светло-зеленый
LIGHTCYAN       equ     11      ;светло-синий
LIGHTRED        equ     12      ;свето-красный
LIGHTMAGENTA    equ     13      ;свето-малиновый
YELLOW          equ     14      ;желтый
WHITE           equ     15      ;интенсивно-белый

; Линия отчеркивания с ушами по краям
specline0:
	ld      c,87h
B0:     call    conout
	ld      c,84h
B1:     call    space0
	ld      c,0b6h
	jr      conout
;
conouta:ld      c,a
conout: push    af
	push    hl
	push    de
	push    bc
	db      21h
BIOS9:  ds      2
;B2:     ld      hl,(BIOS)
;        ld      de,9
;        add     hl,de
B3:     ld      a,(DOS)
	call    Bcall
	pop     bc
	pop     de
	pop     hl
	pop     af
	ret
;
conin:  push    hl
	push    de
	push    bc
	db      21h
BIOS6:  ds      2
;B4:     ld      hl,(BIOS)
;        ld      de,6
;        add     hl,de
B5:     ld      a,(DOS)
	call    Bcall
	pop     bc
	pop     de
	pop     hl
	ret
;
reswinesc:db    27,'W',csetw,0,0,25,80
B6:
fillwin:call    cm3             ; 16 - цветный скоростной режим
B7:
fillwin0:ld     hl,reswinesc
	ld      a,7
B8:     jp      wstrng          ; Установить окно во весь экран
;
setcm0: db      27,'C',0 ;монохром
setcm2: db      27,'C',2 ;16-цветн. обычный
setcm3: db      27,'C',3 ;16-цветн. скоростной
setcolor:db     27,'P',0 ;установка цвета
setins: db      27,'L',0 ;вставить строку
setdel: db      27,'M',0 ;удалить строку

wset8:  ld      a,8
	jr      wsetall
wset6:  ld      a,6
B9:
wsetall:ld      (wsiz),a
B10:
wset:   ld      a,(wsiz)
B11:    ld      (setxms+2),a
B12:    call    writest
setxms: db      27,'Q',0,0;выбор 6/8 бит - толщина шрифта
	ret
;
invflg: db      0
;
norm:   push    hl              ;Выкл. инв.
	push    bc
B13:    call    writest
	db      27,'7',0       ;выкл. инверсию
	xor     a
	jr      xsetmod
inv:    push    hl              ;Вкл. инв.
	push    bc
B14:    call    writest
	db      27,'6',0 ;вкл. инверсию
	ld      a,1
B15:
xsetmod:ld      (invflg),a
setmod: pop     bc
	pop     hl
	ret
;
hidcur: push    af
B16:    call    writest         ;Погасить курсор
	db      27,';',0       ;выкл. курсор
	pop     af
	ret
;
reccur: push    af
B17:    call    writest         ;Восст. курсор
	db      27,':',0       ;вкл.  курсор
	pop     af
	ret
;
offwrite:
B18:    call    p_offset
write:  ld      a,(hl)
	inc     hl
	or      a
	ret     z
B19:    call    conouta
	jr      write

writest:pop     hl
B20:    call    write
	jp      (hl)

offwritest:
	pop     hl
B21:    call    offwrite
	jp      (hl)
;
B22:
cm0:    ld      hl,setcm0        ;Вкл. монохром
	jr      cmx
B23:
cm2:    ld      hl,setcm2        ;16 - цветн. режим
	jr      cmx
B24:
cm3:    ld      hl,setcm3        ;16 - цветн. режим (без вывода цвета)

cmx:    ld      a,3
wstrng: or      a                   ;write line, длина в рег. A
	ret     z
wstrng0:push    af
	ld      a,(hl)
B25:    call    conouta
	inc     hl
	pop     af
	dec     a
	jr      nz,wstrng0
	ret
;
delay:  db      5
;
B26:
INKEY:  ld      a,(delay)
	ld      b,a
	ld      hl,1
inkset: add     hl,hl     ; hl = 2^(delay-1)
	djnz    inkset
inkloop:push    hl
	pop     hl
	dec     hl
	ld      a,h
	or      l
	jr      nz,inkloop
	ld      e,0ffh
	ld      c,6
B27:    call    BDOS
	or      a
	ret     nz
	jr      inkey
;
gotoch: ld      h,a
gotoxy: push    hl
	push    de
	push    bc
	ld      bc,1f1fh
	add     hl,bc
B28:    ld      (gotoxyms+2),hl
B29:    call    writest
gotoxyms:
	db      27,'Y',0,0,0
	pop     bc
	pop     de
	pop     hl
	ret
;
setpar:                     ; h  l  c   b     d    e
			    ; X, Y, DX, DY, TEXT, BACK
	ld      a,h
	dec     a
B30:    ld      (memx),a
	ld      a,l
	dec     a
B31:    ld      (memy),a
	ld      a,c
B32:    ld      (memdx),a
	ld      a,b
B33:    ld      (memdy),a
B34:    call    setcl
B35:    jp      fillwin      ; установлены параметры окна в
			     ; мем..., однако окно определя-
			     ; ется во весь экран.
setcl:  ld      a,d          ; SETCOLOR: text=d, back=e
B36:    ld      (ltc),a
	ld      a,e
B37:    ld      (lbc),a
	rlca
	rlca
	rlca
	rlca
	or      d
B38:    ld      hl,setcolor+2
	ld      (hl),a
	dec     hl
	dec     hl
	ld      a,3
B39:
setcl1: jp      wstrng          ;установка текущего цвета искейп-кодом

setw:   ld      a,csetw         ;Установка окна по текущим: memx,memy,memdx,memdy
	ld      b,7

B40:
wrescw: ld      (Winms+2),a     ;a - mode, b - lng
	ld      a,b
B41:    ld      hl,Winms
	jr      setcl1

csetw    equ     0        ; Коды оконных команд (esc,'W',code,....)
cgetpar  equ     1
cgetwsize equ    2
csavew   equ     3
crestw   equ     4

; получение размера окна: s = dy * 10 * dx * 2
getwsize:
	ld      a,cgetwsize     ;Получение размера окна в hl
	ld      b,3
B42:    call    wrescw
B43:    call    conin
	ld      l,a
B44:    call    conin
	ld      h,a
	ret

restw:  ld      b,crestw   ;Восст. окно, вход: hl - адрес в буфере
	jr      srw

savew:  ld      b,csavew   ;Сохр. окно,  вход: hl - адрес в буфере

srw:    ex      de,hl
B45:    ld      hl,(Winms+3)
	push    hl
B46:    ld      hl,(Winms+5)
	push    hl
	ex      de,hl
B47:    ld      (Winms+3),hl
B48:    ld      a,(Pwind)
B49:    ld      (Winms+5),a
	ld      a,b
	ld      b,6
B50:    call    wrescw
	pop     hl
B51:    ld      (Winms+5),hl
	pop     hl
B52:    ld      (Winms+3),hl
	ret

;             √└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└╥
;             ╨            Параметры окна               ╨
;             ╨    HL - координаты левого верхнего      ╨
;             ╨         угла обьекта                    ╨
;             ╨    B  - размер по вертикали             ╨
;             ╨    C  - размер по горизонтали           ╨
;             ╨    DE - цвет окна                       ╨
;             ⌠└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└╫
window:         ; h l c  b   d   e
		;(X,Y,DX,DY,TEXT,BACK:BYTE);
		;d7 = 0/1 = нет/есть рамка
		;d6 = 0/1 = запоминать/не запоминать в буфер
		;d0 = 0/1 = нет/есть тень
	ld      a,11000001b
newwindow:
B53:    ld      (winmode),a
B54:    call    setpar

;             √└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└╥
;             ╨         П/п "открыть окно"              ╨
;             ⌠└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└╫
B55:
opend:  call    cm2     ; 16 - цветный режим
B56:    ld      hl,Winms+5
	inc     (hl)
	inc     hl
	inc     (hl)    ; inc dy,dx - учитываются размеры
			; тени
	push    hl
B57:    ld      a,(winmode)
	bit     6,a
B58:    call    nz,qb0     ;Запомнить данные в буфере
	pop     hl
	dec     (hl)
	dec     hl
	dec     (hl)    ;dec dy,dx
	dec     hl
	inc     (hl)
	dec     hl
	inc     (hl)    ;inc y,x
	push    hl
B59:    ld      a,(ltc)
	ld      d,a
B60:    ld      a,(lbc)
	ld      e,a
	push    de
	ld      de,white*256+black
B61:    call    setcl   ;установка цвета тени
B62:    call    setw    ;окно для тени
B63:    ld      a,(winmode)
	bit     0,a
	jr      z,notdark
B64:    call    writest ; тень
	db      27,'B',0
notdark:pop     de
B65:    call    setcl
	pop     hl
	dec     (hl)
	inc     hl
	dec     (hl)    ;dec y,x

B66:    ld      a,(winmode)
	and     10000000b
	jr      nz,framed
B67:    call    setw
B68:    call    clrscr
	jr      qb01
;
;             √└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└╥
;             ╨             П/п  qbuffd                 ╨
;             ⌠└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└╫
B69:
qbuffd:
qb0:
	call    setw
B70:    ld      hl,ctw          ;Запомнить данные в буфер
	ld      a,(hl)
	inc     (hl)
B71:    call    getwindpos
	ld      e,(hl)
	inc     hl
	ld      d,(hl)
	inc     hl
	push    de              ;де - адрес свободного куска буфера окон

	ex      de,hl
B72:    call    moveinWinms

	pop     hl
	push    de              ; de -адрес хвоста стекового
				; буфера
	push    hl
B73:    call    savew
B74:    CALL    SETW
B75:    call    getwsize
	pop     de
	add     hl,de
	ex      de,hl
	pop     hl
	ld      (hl),e
	inc     hl
	ld      (hl),d
B76:
qb01:   jp      fillwin ;окно записано в буфер, устанавливается окно во весь
			; экран

;             √└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└╥
;             ╨         П/п "закрыть окно"              ╨
;             ⌠└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└╫
closew: push    af
B77:    call    closew_p
	pop     af
	ret
;
closew_p:
BB77:   ld      hl,ctw
	ld      a,(hl)
	or      a
	ret     z               ;Попытка закрыть несуществующее окно - возврат
	dec     a
	ld      (hl),a
B78:    call    getwindpos
	ld      e,(hl)
	inc     hl
	ld      d,(hl)
	inc     hl
	push    de              ;de - адрес освобождающегося куска буфера окон

B79:    call    movetoWinms
B80:    call    setw            ;Установка окнa по данным стекового буфера
	pop     hl
B81:    call    restw           ;Восстановить окно
	jr      qb01

;рисование рамки из псевдографики
;исп. 137 141...141 187
;     186           186
;     136 141...141 188
;левый верхний угол [memx]+1,[memy]+1
;размер по вертикали [memdy], по горизонтали [memdx]
B82:
framed: call    setw    ;окно для рамки
B83:
haryrama:
	call    clrscr
B84:    call    fillwin
B85:    ld      a,(memy)
	inc     a
	ld      l,a
B86:    ld      a,(memx)
	inc     a
	ld      h,a     ;hl - координаты левого верхнего угла рамы
;рисование верхней балки рамы   вход: хл - лев. верхний угол
B87:    call    gotoxy
	ld      c,137
B88:    call    conout
B89:    call    updnline
	ld      c,187
B90:    call    conout
	inc     l
B91:    ld      a,(memdy)
	sub     2
	ld      b,a     ;Число информац. строк
rama0:  push    hl
	push    bc

B92:    call    gotoxy
	ld      c,186
B93:    call    conout

B94:    ld      a,(memdx)
	dec     a
	add     a,h
	ld      h,a
B95:    call    gotoxy
	ld      c,186
B96:    call    conout

	pop     bc
	pop     hl
	inc     l
	djnz    rama0
;рисование нижней балки рамы   вход: хл - лев. верхний угол
B97:    call    gotoxy
	ld      c,136
B98:    call    conout
B99:    call    updnline
	ld      c,188
B100:   jp      conout

B101:
updnline:ld      a,(memdx)
	dec     a
	dec     a
	ld      b,a
upline0:ld      c,141
B102:   jp      space0
moveinWinms:
B103:   ld      hl,Winms+3
	jr      ldir4
movetoWinms:
B104:   ld      de,Winms+3
ldir4:  ld      bc,4
	ldir
	ret
;             √└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└╥
;             ╨         П/п "закрыть все окна "         ╨
;             ⌠└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└╫
B105:
closal: ld      a,(ctw)
	or      a
	ret     z
B106:   call    closew
	jr      closal
;             √└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└╥
;             ╨         П/п "сдвиг вверх/вниз "         ╨
;             ⌠└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└└╫
sd1:    xor     a
	jr      sx0
su1:    ld      a,1
sx0:    or      a
	push    af
B107:   call    setw
B108:   call    home
	pop     af
B109:   ld      hl,fillwin
	push    hl
B110:   ld      hl,write
	push    hl
B111:   ld      hl,setins       ;вставить строку
	ret     z
B112:   ld      hl,setdel       ;удалить строку
	ret
;
p_offset: ld      d,(hl)          ;вход: hl - начало элемента
	inc     d
	inc     hl
	ld      e,(hl)
	inc     e
	push    hl
	ex      de,hl
B113:   call    gotoxy          ;p_offset текста в окне
	pop     hl
	inc     hl
	ret
;
; Выделить цветом заглавные буквы
; данные по ix-3 и ix+6
MAKEHIGH:push   ix
B114:   ld      hl,(ltc) ; запомнить старый цвет
	push    hl
	push    bc
	ld      d,(ix-3) ; уст. цвет графики
	ld      e,(ix+6) ; уст. цвет фона
B115:   ld      a,(invflg)
	or      a
	jr      z,MKH0
	ld      e,d
	ld      d,(ix+5)
B116:
MKH0:   call    setcl
B117:   call    cm2
	pop     bc
B118:   call    conout
	pop     de
B119:   call    setcl
B120:   call    cm3
	pop     ix
	ret
;
B121:
cmenu:  call    arrsel
	push    hl
	ld      a,e
	push    af
B122:   call    wrelem
B123:   call    norm
B124:   call    rki1buff
	pop     af
	pop     hl
;
wrelem: sub     2
	bit     2,(ix)
	push    af
B125:   call    p_offset          ;вход: hl - начало, a - размер  элемента
	pop     af
B126:   jp      z,wstrng
wrelem1:ld      b,a
wrel1:  ld      a,(hl)
	or      a
	ret     z
	push    bc
	push    hl
	ld      c,a
	and     10100000b
	jr      nz,wrel2
	ld      a,c
	cp      91
	jr      nc,wrel2
B127:   call    MAKEHIGH ; Выделить цветом заглавн. буквы
	jr      wrel3
B128:
wrel2:  call    conout
wrel3:  pop     hl
	inc     hl
	pop     bc
	djnz    wrel1
	ret
;
rki1buff:
B129:   ld      hl,i1buff
	ld      b,4
ri1b1:  ld      a,(hl)
	or      a
	jr      nz,ri1b2
	inc     hl
	djnz    ri1b1
B130:   call    fillwin0
B131:   call    rki1
B132:   jp      setw
B203:
ri1b2:  ld      (i1),a
	ld      (hl),0
	ret
;
lstelem:push    ix
	push    bc
	push    hl
	push    af
B133:   call    wrelem
	pop     af
	ld      e,a
	ld      d,0
	pop     hl
	add     hl,de
	pop     bc
	pop     ix
	djnz    lstelem
	ret
;
CP65:
COMPAIR:ld      hl,wincom+2
	jr      objectwin
;
SAVEFILE:
SV117:
	ld      hl,wsavemenu+2
	jr      objectwin
;
LOADFILE:
LD83:
	ld      hl,wloadmenu+2
	jr      objectwin
;
S150:
SEARCH: ld      hl,winsearch+2
	jr      objectwin
;
DZ133:
FDIS:   ld      hl,windis+2
	jr      objectwin
;
FL40:
FILL:   ld      hl,windfill+2
	jr      objectwin
;
XR28:
FXOR:   ld      hl,windxor+2
	jr      objectwin
DF9:
FDEF:   ld      hl,windef+2
	jr      objectwin
;
CHECKSUM:
CS00:
	ld      hl,wincheck+2
	jr      objectwin
;
CA12:
FCALL:  ld      hl,wincall+2
	jr      objectwin
MOVE:
MV44:   ld      hl,windmov+2
	jr      objectwin
DUMPMODIFY:
D150:   ld      hl,windump+2
	jr      objectwin
ARITHMETIC:
A39:    ld      hl,winart+2
	jr      objectwin
; п/п оконного меню . Вход : hl - адрес таблицы описания меню
; [hl-1] - vpoint
; [hl-2] - hpoint
objectwin:
	push    hl
	pop     ix
B134:   call    initaddr        ; инициализация  haddr  и  vaddr  +  wset8
	push    ix
B135:   call    newwindow       ;рисование рамки. Рег. A - дополнительный
B136:   call    setw            ;(в сравнении с вызовом п/п window)
	pop     ix
	push    ix
	ld      l,(ix+4)
	dec     l
	dec     l
	ld      h,1
	ld      b,(ix+3)
	dec     b
	dec     b
	ld      c,(ix)
	push    bc
B137:   call    gotoxy
	pop     bc
	bit     1,c
B138:   call    nz,specline0    ;отчеркивание гор. меню
	pop     ix
	push    ix
	ld      l,(ix+7)
	ld      h,(ix+8)        ;hl = адрес строки или процедуры шапки
	bit     4,(ix)          ;печать строки или вызов процедуры (шапка)
	jr      nz,obwin1
B139:   ld      de,obwin2
	push    de
	jp      (hl)            ;вызов п/п рисования шапки этого окна
B140:
obwin1: call    offwrite        ;печать строки шапки
obwin2: pop     ix
	ld      a,(ix+9)
	or      a
	jr      z,listhor       ;если нет верт. меню
	ld      b,a             ;b-количество пунктов верт.меню
	ld      a,(ix+10)       ;a= длина (размер) элемента
B141:   ld      hl,(vaddr)
B142:   call    lstelem
listhor:ld      a,(ix+11)
	or      a
	jr      z,vermenu       ;если нет гор. меню
	ld      b,a             ;b-количество пунктов гор. меню
	ld      a,(ix+12)       ;a= длина (размер) элемента
B143:   ld      hl,(haddr)
B144:   call    lstelem
vermenu:ld      a,(ix+9)
	or      a
B145:   jp      z,hormenu
vmenu1: push    ix
B146:   call    inv
	pop     ix
	push    ix
B147:   ld      hl,(vaddr)
	ld      e,(ix+10)
	xor     a
	ld      d,a
	sbc     hl,de
	ld      a,(ix-1)  ; vpoint
B148:   call    cmenu
	pop     ix
B149:   ld      hl,vmenu1
	push    hl
B204:   ld      a,(i1)
	cp      13
	jr      z,venter
	cp      8
	jr      z,vleft
	cp      4
	jr      z,vright
	cp      5
	jr      z,vup
	cp      24
	jr      z,vdown
	cp      27
	jr      z,hvesc
B150:   jp      melse
;
vleft:  ld      a,(ix+11)
	or      a
	JR      NZ,VLEFT0
	LD      A,(IX+12)
	OR      A
	jr      z,hvesc ; ПЕРЕХОД IX+11=IX+12=0
; IX+12 (РАЗМЕР ЭЛЕМЕНТА ГОРИЗОНТАЛЬНОГО МЕНЮ) ИСПОЛЬЗУЕТСЯ КАК ШАГ ПЕРЕМЕЩЕ-
; НИЯ ПО ВЕРТИКАЛЬНОМУ МЕНЮ
	LD      B,A
B151:
VLEFT1: CALL    VUP
	RET     Z
	DJNZ    VLEFT1
	RET
VLEFT0: xor     a
	ld      (ix-1),a  ; vpoint
	ret
vright: ld      a,(ix+11)
	or      a
	JR      NZ,TOHOR
	LD      A,(IX+12)
	OR      A
	jr      z,hvesc
	LD      B,A
B152:
VRIGHT0:CALL    VDOWN
	RET     NC
	DJNZ    VRIGHT0
	RET
tohor:  pop     hl
	jr      hormenu
vup:    ld      a,(ix-1)  ; vpoint
	or      a
	ret     z
	dec     a
	ld      (ix-1),a  ; vpoint
	ret
vdown:  ld      C,(ix+9)
	ld      a,(ix-1)  ; vpoint
	inc     a
	cp      C
	jr      nc,vdown1
	ld      (ix-1),a  ; vpoint
	ret
vdown1: ld      a,(ix+11)
	or      a
	ret     z
	jr      tohor
hvesc:  pop     hl
B153:   call    closew
B154:   jp      fillwin
venter: ld      a,(ix-1)  ; vpoint
B155:   jp      vmelse
henter: ld      a,(ix-2)  ; hpoint
	jr      hmelse
;
hormenu:push    ix
B156:   call    inv
	pop     ix
	push    ix
B157:   ld      hl,(haddr)
	ld      e,(ix+12)
	xor     a
	ld      d,a
	sbc     hl,de
	ld      a,(ix-2)  ; hpoint
B158:   call    cmenu
	pop     ix
B159:   ld      hl,hormenu
	push    hl
B205:   ld      a,(i1)
	cp      5
B160:   jp      z,hup
	cp      24
	jr      z,hdown
	cp      27
	jr      z,hvesc
	cp      13
	jr      z,henter
	cp      8
B161:   jp      z,hleft
	cp      4
B162:   jp      z,hright
melse:  bit     2,(ix)
	ret     z
	cp      40h
	ret     c
	and     5fh     ;полученное значение ищем
	cp      '['
	ret     nc
	ld      b,63
B163:   ld      hl,k
msearch:cp      (hl)
	jr      z,melse4
	inc     hl
	djnz    msearch
	ret
melse4: ld      a,63
	sub     b
	ld      b,(ix+9)
	cp      b
	jr      c,melse1
	sub     b
	ld      (ix-2),a  ; hpoint
B164:
hmelse: ld      hl,(haddr)
	ld      e,(ix+12)
B165:   call    invptr
	ld      b,(ix+9)
	add     a,b
	jr      melse2
melse1: ld      (ix-1),a   ; vpoint
B166:
vmelse: ld      hl,(vaddr)
	ld      e,(ix+10)
B167:   call    invptr
melse2: pop     bc
	push    ix
	push    af
B168:   ld      hl,return
	push    hl
	ld      l,(ix+13)
	ld      h,(ix+14)
	or      a               ;уст. признаки
	jp      (hl)
;
hdown:  ld      a,(ix+11)
	dec     a
	ld      (ix-2),a  ; hpoint
	ret
hup:    ld      a,(ix+9)
	or      a
	ret     z
	pop     hl
B169:   jp      vermenu
hleft:  ld      a,(ix-2)  ; hpoint
	or      a
	jr      z,hup
	dec     a
	ld      (ix-2),a  ; hpoint
	ret
hright: ld      b,(ix+11)
	ld      a,(ix-2)  ; hpoint
	inc     a
	cp      b
	ret     nc
	ld      (ix-2),a  ; hpoint
	ret
;
return: pop     af              ; a = номер ранее вызывавшейся функции
	pop     hl
	push    hl
	pop     ix              ; hl = ix = адрес начала таблицы окна
	ld      b,(ix+9)
	ld      c,a
	sub     b
	jr      c,return1
	ld      (ix-2),a       ; hpoint пред. вызов - из горизонтального меню
B170:   ld      de,hormenu
	jr      return2
return1:ld      a,c             ; предыдущий вызов - из вертикального меню
	ld      (ix-1),a        ; vpoint
B171:   ld      de,vermenu
return2:push    de              ; адрес перехода по стеку
B172:   call    initaddr
	push    ix
B173:   call    setpar
B174:   call    setw
	pop     ix
	ret
;
initaddr:
	ld      de,15
	add     hl,de           ;hl-начало массива верт. эл-тов
B175:   ld      (vaddr),hl
	ld      d,0
	ld      e,(ix+10)
	ld      a,(ix+9)
	or      a
	jr      z,object2
	sbc     hl,de
B176:   call    arrsel
B177:
object2:ld      (haddr),hl
	push    hl
B178:   ld      hl,k
	ld      (hl),0
	ld      e,l
	ld      d,h
	inc     de
	ld      bc,63
	ldir
	pop     hl
	ld      d,0
	ld      e,(ix+12)
	ld      a,(ix+11)
	or      a
	jr      z,object3
	sbc     hl,de
B179:   call    arrsel
B180:
object3:ld      de,(vaddr)
	ex      de,hl
B181:   ld      bc,k
object4:ld      a,(hl)
	cp      40h
	jr      c,object5
	cp      '['
	jr      nc,object5
	ld      (bc),a
	inc     bc
object5:inc     hl
	push    hl
	sbc     hl,de
	pop     hl
	jr      c,object4
	push    ix
B182:   call    wset8
	pop     ix
	ld      a,(ix+1)
	ld      h,a
	ld      l,(ix+2)
	ld      a,(ix)
	ld      c,(ix+3)
	ld      b,(ix+4)
	ld      d,(ix+5)
	ld      e,(ix+6)
	ret

;
invptr: push    af
	push    ix
	or      a
	ld      d,0
	sbc     hl,de
B183:   call    arrsel
	ld      a,e
	push    af
	push    hl
B184:   call    inv
	pop     hl
	pop     af
B185:   call    wrelem
B186:   call    norm
	pop     ix
	pop     af
	ret
;
Winms:  db      1bh,'W'
Winmod: ds      1       ;esc - code 'W' / select
memy:   ds      1       ;y
memx:   ds      1       ;x
memdy:  ds      1       ;dy
memdx:  ds      1       ;dx
;
initfcb:push    hl                ;Адрес имени в hl
B187:   ld      hl,fcb
	ld      (hl),0
	ld      b,11
init20: inc     hl
	ld      (hl),20h
	djnz    init20
	ld      b,21
initf0: inc     hl
	ld      (hl),0
	djnz    initf0
	pop     hl
B188:   ld      de,fcb+1
	ld      b,8
inif1:  ld      a,(hl)
	cp      1Ah
	ret     z
	cp      '.'
	jr      z,inif3
	cp      40h
	jr      c,inif2
	ld      c,a
	and     5fh
inif2:  ld      (de),a
	inc     de
	inc     hl
	djnz    inif1
B189:
inif3:  ld      de,fcb+9
	inc     hl
	ld      b,3
inif4:  ld      a,(hl)
	cp      '.'
	ret     z
	cp      40h
	jr      c,inif5
	ld      c,a
	and     5fh
inif5:  ld      (de),a
	inc     de
	inc     hl
	djnz    inif4
	ret
;
replace:
	ld      a,(hl)
	xor     1
	ld      (hl),a
	ret
;
wrhex:  push    af
	rrca
	rrca
	rrca
	rrca
	and     0fh
B190:   call    wrhex0
	pop     af
	and     0fh
wrhex0: cp      0ah
	jr      c,wrhex1
	add     a,7
wrhex1: add     a,30h
B191:   jp      conouta
;
getwindpos:
B192:   ld      hl,buffw-6      ;Восстановить картинку под окном из буфера
	ld      de,6
	jr      arrsel
;
arrsel: inc     a               ;Вход hl,de,a. Выход hl
arrsl0: add     hl,de
	dec     a
B193:   jp      nz,arrsl0
	ld      a,(hl)
	or      a
	ret

setless:ld      c,27
B194:   call    conout
	ld      c,'@'
	jr      wrsym

B195:
wrlitle:call    setless
	ld      c,a
	jr      wrsym
;
wr20h:  ld      c,' '
B196:
wrsym:  jp      conout
;
clrscr: ld      c,0ch              ;cls
	jr      wrsym              ;вывод байта на экран

; взамен wstrng , вход: hl, a
wst:    or      a
	ret     z
ws12:   push    af
	ld      a,(hl)
	cp      20h
B197:   call    c,setless
B198:   call    conouta
	inc     hl
	pop     af
	dec     a
	jr      nz,ws12
	ret

;wri1:   ld      a,(i1)
;        ld      c,a
;        jr      wrsym


; *** Курсор домой ***
B199:
home:   call    writest
	db      27,'H',0
	ret
;
B200:
space0: call    conout
	djnz    space0
	ret
;
readkey equ     inkey

B201:
fastrki1:
rki1:   call    readkey
B206:   ld      (i1),a
	ret

standexit:                      ; Стандартный выход из меню
	pop     hl
	pop     hl
	pop     hl
B202:   jp      closew


 ание рамки. Рег. A - дополните